@import "type-check";
@import "type-conversion";
@import "stringify";
@import "base-fn";

@mixin test-args($args...){
  $data:keywords($args);
  data:inspect($data);
  type:type-of($data);
  @each $item in map-keys($data){
    #{$item}: variable-exists($item);
  }
}

@function amid($var,$lower,$higher){
  $min:min($lower,$higher);
  $max:max($lower,$higher);
  @if $var>$min and $var<$max{
    @return true;
  }
  @return false;
}

@function expand-margins($margins){
  $margins:to-list($margins);
  @if length($margins)<2{
    $margins:append($margins,nth($margins,1));
  }
  @if length($margins)<3{
    $margins:append($margins,nth($margins,1));
  }
  @if length($margins)<4{
    $margins:append($margins,nth($margins,2));
  }
  @return list-slice($margins,1,4);
}

@function shrink-margins($margins){
  $margins:to-list($margins);
  $margins:if(length($margins)>4,list-slice($margins,1,4),$margins);
  @if length($margins)==4 and nth($margins,4)==nth($margins,2){
    $margins:list-slice($margins,1,3);
  }
  @if length($margins)==3 and nth($margins,3)==nth($margins,1){
    $margins:list-slice($margins,1,2);
  }
  @if length($margins)==2 and nth($margins,2)==nth($margins,1){
    $margins:list-slice($margins,1,1);
  }
  @return $margins;
}

@function slow-sort($list,$ascend:true){
  $list:to-list($list);
  $max:max($list);
  $min:min($list);
}

@function border-modify(){
  $borders:();
  $border-direction:'' '-top' '-right' '-left' '-width';
  $border-property:'' '-width' '-color' '-style';
  @each $direction in $border-direction{
    @each $property in $border-property{
      $borders:append($borders,'border'+$direction+$property);
    }
  }
  @return $borders;
}

a{
  value21: inspect(str-split('a-b-c-d','-'));
  value3: inspect(_parse-key-name('bo-l-w'));

  value4: check-multiple-type('a',map,STRING,list,number,boolean);

  value5: inspect(map-merge((a:1,b:2,c:3),(b:12,c:13,d:14)));

  @include test-args($a:1,$b:'abc');

  value6:inspect(expand-margins((1,2,3,4,5)));

  $expander:expand-margins((1));

  value7:inspect($expander);
  value8:inspect(shrink-margins($expander));

  value9:inspect(border-modify());
}

