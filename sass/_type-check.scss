//Type Check

//list of type
$type-list:number string color bool list map;
//type check of single variables
@function _isCertainType($var, $n:1){
  $r:false;
  @if variable_exists(var){
    $r:type-of($var)==nth($type-list, $n);
  }
  @return $r;
}
//type check of some variables
@function _isType($n, $vars...){
  @each $var in $vars{
    @if not _isCertainType($var, $n){
      @return false;
    }
  }
  @return true;
}
//certain type check of some variables
@function isNumber($vars...){
  @return _isType(1, $vars...);
}
@function isString($vars...){
  @return _isType(2, $vars...);
}
@function isColor($vars...){
  @return _isType(3, $vars...);
}
@function isBoollean($vars...){
  @return _isType(4, $vars...);
}
@function isList($vars...){
  @return _isType(5, $vars...);
}
@function isMap($vars...){
  @return _isType(6, $vars...);
}

@function isEmptyList($vars...){
  @each $var in $vars{
    @if not (isList($var) and length($var)==0){
      @return false;
    }
  }
  @return true;
}

@function isNonEmptyList($vars...){
  @each $var in $vars{
    @if not (isList($var) and length($var)>0){
      @return false;
    }
  }
  @return true;
}


//check type
@function checkType($n,$vars...){
  @if not _isType($n,$vars...){
    @error 'Invalid type of #{$vars}. Parameters of #{nth($type-list,$n)} type required.';
  }
  @return true;
}
@function checkNumber($vars...){
  @return checkType(1, $vars...);
}
@function checkString($vars...){
  @return checkType(2, $vars...);
}
@function checkColor($vars...){
  @return checkType(3, $vars...);
}
@function checkBoollean($vars...){
  @return checkType(4, $vars...);
}
@function checkList($vars...){
  @return checkType(5, $vars...);
}
@function checkMap($vars...){
  @return checkType(6, $vars...);
}

//determine if the variables is a number with given unit
@function hasUnit($var,$unit:px){
  @return isNumber($var) and unit($var)==$unit;
}
